{
  "version": 3,
  "sources": ["../../../app/routes/$noteTitle.tsx", "../../../app/components/NoteContent.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\$noteTitle.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\$noteTitle.tsx\");\n  import.meta.hot.lastModified = \"1728568676333.0261\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport NoteContent from \"~/components/NoteContent\";\nimport { useState, useRef, useEffect } from \"react\";\nimport NotesList from \"~/components/NotesList\";\nimport { getNotes } from \"~/utils/types\";\nexport const loader = async ({\n  params\n}) => {\n  const notes = getNotes();\n  const note = notes.find(n => n.title.toLowerCase() === params.noteTitle?.toLowerCase());\n  if (!note) {\n    throw new Response(\"Note not found\", {\n      status: 404\n    });\n  }\n  return json({\n    note,\n    notes\n  });\n};\nexport default function NotePage() {\n  _s();\n  const {\n    note,\n    notes\n  } = useLoaderData();\n  const [sidebarWidth, setSidebarWidth] = useState(250);\n  const sidebarRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (!isDraggingRef.current) return;\n      const newWidth = e.clientX;\n      if (newWidth > 150 && newWidth < 500) {\n        setSidebarWidth(newWidth);\n      }\n    };\n    const handleMouseUp = () => {\n      isDraggingRef.current = false;\n    };\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    document.addEventListener(\"mouseup\", handleMouseUp);\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, []);\n  const handleMouseDown = () => {\n    isDraggingRef.current = true;\n  };\n  return <div className=\"flex h-screen bg-gray-100\">\r\n      <div ref={sidebarRef} className=\"bg-gray-200 border-r border-gray-300 relative\" style={{\n      width: `${sidebarWidth}px`\n    }}>\r\n        <NotesList notes={notes} />\r\n        <span className=\"absolute top-0 right-0 w-1 h-full cursor-col-resize bg-gray-400 opacity-0 hover:opacity-100\" onMouseDown={handleMouseDown}></span>\r\n      </div>\r\n      <div className=\"flex-grow\">\r\n        <NoteContent note={note} />\r\n      </div>\r\n    </div>;\n}\n_s(NotePage, \"u7+VZcpTmzw7YMGWLK47tf7LVDA=\", false, function () {\n  return [useLoaderData];\n});\n_c = NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\NoteContent.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\NoteContent.tsx\");\n  import.meta.hot.lastModified = \"1728566343648.109\";\n}\n// REMIX HMR END\n\nimport React, { useState } from \"react\";\nconst NoteContent = ({\n  note\n}) => {\n  _s();\n  const [userNote, setUserNote] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    // In a real app, you'd save this note to a database\n    console.log(`New note for ${note.title}: ${userNote}`);\n    setUserNote(\"\");\n  };\n  return <div className=\"h-full p-6 bg-white\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">{note.title}</h2>\r\n      <div className=\"mb-6\">{note.content}</div>\r\n      <form onSubmit={handleSubmit} className=\"mt-4\">\r\n        <textarea value={userNote} onChange={e => setUserNote(e.target.value)} placeholder=\"Leave a note...\" className=\"w-full h-32 p-2 border border-gray-300 rounded resize-none\" />\r\n        <button type=\"submit\" className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\">\r\n          Add Note\r\n        </button>\r\n      </form>\r\n    </div>;\n};\n_s(NoteContent, \"/ltpnceaQpWqhZGEUpaFGJXuCNE=\");\n_c = NoteContent;\nexport default NoteContent;\nvar _c;\n$RefreshReg$(_c, \"NoteContent\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "_s", "_s", "_c"]
}
